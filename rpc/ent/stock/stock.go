// Code generated by ent, DO NOT EDIT.

package stock

import (
	"time"

	"entgo.io/ent/dialect/sql"
	uuid "github.com/gofrs/uuid/v5"
)

const (
	// Label holds the string label denoting the stock type in the database.
	Label = "stock"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldStockName holds the string denoting the stock_name field in the database.
	FieldStockName = "stock_name"
	// FieldStockCode holds the string denoting the stock_code field in the database.
	FieldStockCode = "stock_code"
	// FieldIsRecommend holds the string denoting the is_recommend field in the database.
	FieldIsRecommend = "is_recommend"
	// Table holds the table name of the stock in the database.
	Table = "stocks"
)

// Columns holds all SQL columns for stock fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldStatus,
	FieldStockName,
	FieldStockCode,
	FieldIsRecommend,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus uint8
	// DefaultIsRecommend holds the default value on creation for the "is_recommend" field.
	DefaultIsRecommend bool
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// OrderOption defines the ordering options for the Stock queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}

// ByStatus orders the results by the status field.
func ByStatus(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldStatus, opts...).ToFunc()
}

// ByStockName orders the results by the stock_name field.
func ByStockName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldStockName, opts...).ToFunc()
}

// ByStockCode orders the results by the stock_code field.
func ByStockCode(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldStockCode, opts...).ToFunc()
}

// ByIsRecommend orders the results by the is_recommend field.
func ByIsRecommend(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIsRecommend, opts...).ToFunc()
}
